name: AlignWork Backend CI/CD Pipeline (Staging)

on:
  push:
    branches: [ staging ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        pip install -r requirements.txt

    - name: Run Tests
      env:
        # ===========================================================
        # ------------------------- GENERAL ------------------------- 
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DJANGO_SETTINGS_MODULE: ${{ secrets.DJANGO_SETTINGS_MODULE }}
      
        # ------------------------- SUPERUSER ------------------------- 
        USERNAME: ${{ secrets.USERNAME }}
        EMAIL: ${{ secrets.EMAIL }}
        PASSWORD: ${{ secrets.PASSWORD }}
      
        # ------------------------- DATABASE ------------------------- 
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      
        # ------------------------- CORS ------------------------- 
        CORS_ORIGINS: ${{ secrets.CORS_ORIGINS }}
      
        # ------------------------- CSRF ------------------------- 
        CSRF_TRUSTED_ORIGINS: ${{ secrets.CSRF_TRUSTED_ORIGINS }}
        
        # ------------------------- CDN STORAGE ------------------------- 
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
      
        # ------------------------- TEXT PROCESSING DETAILS -------------------------
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ASSISTANT_ID: ${{ secrets.ASSISTANT_ID }}
        
        # -------------------------- REDIS CONFIG ----------------------------
        REDIS_URL: ${{ secrets.REDIS_URL }}
        
        # -------------------------- MEETINGS ----------------------------
        FIREFLIES_API_KEY: ${{ secrets.FIREFLIES_API_KEY }}
      
        # -------------------------- ZOOM ----------------------------
        ZOOM_ACCOUNT_ID: ${{ secrets.ZOOM_ACCOUNT_ID }}
        ZOOM_CLIENT_ID: ${{ secrets.ZOOM_CLIENT_ID }}
        ZOOM_CLIENT_SECRET: ${{ secrets.ZOOM_CLIENT_SECRET }}
        # ===========================================================

      run: |
        python manage.py test

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build and Push Docker image for Staging
      if: github.ref == 'refs/heads/staging'
      run: |  
        docker build -t alw:staging .
        docker tag alw:staging ${{ secrets.DOCKER_HUB_USERNAME }}/alw:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/alw:latest

    - name: List files in repository root
      run: ls -al
      
    - name: Deploy to Staging Server
      if: github.ref == 'refs/heads/staging'
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          ls -al
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
          echo "Current directory: $(pwd)"
          echo "Transferring docker-compose.yml"
          scp docker-compose.yml ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/home/ubuntu/alignwork/
          echo "Transferring .env"
          scp .env ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/home/ubuntu/alignwork/
          echo "Transferring nginx.conf"
          scp nginx.conf ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/home/ubuntu/alignwork/
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} 'cd /home/ubuntu/alignwork/ && docker-compose down && docker-compose up -d'
